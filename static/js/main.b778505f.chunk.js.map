{"version":3,"sources":["Title.js","AnnouncementImage.js","larry_the_cat.jpg","App.js","reportWebVitals.js","index.js"],"names":["Title","className","props","classNames","AnnouncementImage","React","ref","src","photo","alt","name","department","App","useState","Larry","setPhoto","nameText","setNameText","departmentText","setDepartmentText","isLoading","setIsLoading","printRef","e","preventDefault","toPng","current","cacheBust","height","then","dataUrl","link","document","createElement","download","href","click","catch","err","console","log","Container","fluid","Row","Col","md","order","id","Form","onSubmit","onReset","Group","controlId","Label","Control","type","onChange","URL","createObjectURL","target","files","value","Button","variant","disabled","role","aria-hidden","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b778505f.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Title = ({ className, ...props }) => {\r\n  return (\r\n    <h1 className={classNames(\"my-3\", className)} {...props}>\r\n      Secretary of State for...\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import * as React from \"react\";\r\nimport \"./Announcement.scss\";\r\n\r\nconst AnnouncementImage = React.forwardRef((props, ref) => {\r\n    return(\r\n        <div ref={ref} {...props}>\r\n                <div className=\"background box announcementContainer\">\r\n                    <div className=\"left-third\">\r\n                    </div>\r\n                    <div className=\"right-third\">\r\n                        <img src={props.photo} alt={props.name} className={\"photo\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"foreground box announcementContainer\">\r\n                    <p className=\"number number10_font\">10</p>\r\n                    <div className=\"namesection section\">\r\n                        <p className=\"therthon announcement-content bold\">The RT HON</p>\r\n                        <p className=\"namemp announcement-content bold\"><span className=\"name\">{props.name}</span> MP</p>\r\n                    </div>\r\n                    <div className=\"secstatesection section\">\r\n                        <p className=\"appointed announcement-content\">Appointed</p>\r\n                        <p className=\"secstate announcement-content bold\">Secretary of State</p>\r\n                        <p className=\"for announcement-content bold\">For <span>{props.department}</span></p>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default AnnouncementImage;\r\n","export default __webpack_public_path__ + \"static/media/larry_the_cat.bfefb3ef.jpg\";","import \"./App.scss\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { toPng } from 'html-to-image';\r\nimport * as React from \"react\";\r\nimport Title from \"./Title\";\r\nimport AnnouncementImage from \"./AnnouncementImage\";\r\nimport Larry from \"./larry_the_cat.jpg\"\r\nconst IMAGE_ID = \"SecStateImage\";\r\n\r\nfunction App() {\r\n  const [photo, setPhoto] = useState(Larry);\r\n  const [nameText, setNameText] = useState(\"Larry the Cat\");\r\n  const [departmentText, setDepartmentText] = useState(\"Cats\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const printRef = React.useRef();\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n  \r\n    toPng(printRef.current, { \r\n      cacheBust: true, \r\n      height: 750,\r\n    })\r\n      .then((dataUrl) => {\r\n        const link = document.createElement('a')\r\n        link.download = 'my-image-name.png'\r\n        link.href = dataUrl\r\n        link.click()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      });\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function onReset(e) {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setPhoto(null);\r\n    setNameText(\"\");\r\n    setDepartmentText(\"\")\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Container fluid={true} className={\"md-min-vh-100\"}>\r\n      <Row className={\"h-100\"}>\r\n        <Col md={{ order: 12 }} className={\"pt-2\"}>\r\n          <AnnouncementImage\r\n            ref={printRef}\r\n            id={IMAGE_ID}\r\n            photo={photo}\r\n            name={nameText}\r\n            department={departmentText}\r\n          />\r\n        </Col>\r\n        <Col md={{ order: 1 }} className={\"sidebar-bg pt-2 menu\"}>\r\n          <Form onSubmit={onSubmit} onReset={onReset}>\r\n            <Title />\r\n            <Form.Group controlId=\"formPhoto\">\r\n              <Form.Label>Photo</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                onChange={(e) => setPhoto(URL.createObjectURL(e.target.files[0]))}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={nameText}\r\n                onChange={(e) => setNameText(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formDepartment\">\r\n              <Form.Label>Department</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={departmentText}\r\n                onChange={(e) => setDepartmentText(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              variant=\"primary\"\r\n              type={\"submit\"}\r\n              className={\"float-right\"}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading && (\r\n                <>\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-2\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  <span className=\"sr-only mr-2\">Loading...</span>\r\n                </>\r\n              )}\r\n              Download\r\n            </Button>\r\n            <Button\r\n                variant=\"primary\"\r\n                type={\"reset\"}\r\n                className={\"float-right mr-2\"}\r\n                disabled={isLoading}\r\n            >\r\n              {isLoading && (\r\n                  <>\r\n                  <span\r\n                      className=\"spinner-border spinner-border-sm mr-2 \"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                  />\r\n                    <span className=\"sr-only mr-2\">Loading...</span>\r\n                  </>\r\n              )}\r\n              Clear\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}